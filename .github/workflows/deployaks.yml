name: AKS-and-deploy

on:
  push:
    branches:
      - main
permissions:
      id-token: write
      contents: read
      pages: write
env:
   TF_WORKING_DIR: ./AKS_Terraform
  #  TF_WORKING_DIR_deploy: ./AKS_Terraform/deployment
jobs:
  terraform:
    name: Terraform AKS Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: service_principal

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.0
          
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

      # - name: Terraform Init
      #   run: terraform init

      # - name: Terraform Plan
      #   run: terraform plan -out=tfplan

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan

  deploy:
    name: Deploy to AKS
    needs: terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pages: write
    env:
    # default manifest path in your repo (change if different)
     TF_WORKING_DIR_deploy: AKS_Terraform/deployment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          auth-type: service_principal

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get AKS credentials
        run: az aks get-credentials -g demo-aks-rg -n demo-aks-aks --overwrite-existing 
      - name: Apply Kubernetes manifests
        working-directory: ${{ env.TF_WORKING_DIR_deploy }}
        run: |
         kubectl apply -f $TF_WORKING_DIR_deploy --recursive
